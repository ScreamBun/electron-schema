{
  "name": "electron_app",
  "productName": "ElectronSchemaEditor",
  "version": "1.0.0",
  "description": "Lorem Ipsum",
  "author": {
    "name": "Test Example",
    "email": "test@example.com",
    "url": "http://example.com"
  },
  "homepage": "http://example.com",
  "license": "MIT",
  "scripts": {
    "build": "rimraf app/dist && concurrently \"yarn build-main\" \"yarn build-renderer\"",
    "build-dll": "cross-env NODE_ENV=development webpack --colors --config ./config/webpack.config.renderer.dev.dll.babel.js",
    "build-main": "cross-env NODE_ENV=production webpack --colors --config ./config/webpack.config.main.prod.babel.js",
    "build-renderer": "cross-env NODE_ENV=production webpack --colors --config ./config/webpack.config.renderer.prod.babel.js",
    "dev": "cross-env START_HOT=1 node -r @babel/register ./internals/scripts/CheckPortInUse.js && cross-env START_HOT=1 yarn start-renderer-dev",
    "download-themes": "node -r @babel/register ./internals/scripts/DownloadBootswatch.js",
    "electron-rebuild": "electron-rebuild --parallel --force --types prod,dev,optional --module-dir app",
    "lint": "cross-env NODE_ENV=development eslint . --cache --ext .js,.jsx,.ts,.tsx",
    "lint-errors": "cross-env NODE_ENV=development eslint . --cache --quiet --ext .js,.jsx,.ts,.tsx",
    "lint-fix": "yarn --silent lint --fix; exit 0",
    "lint-styles": "stylelint --ignore-path .eslintignore '**/*.*(css|scss)' --syntax scss",
    "lint-styles-fix": "yarn --silent lint-styles --fix; exit 0",
    "package": "yarn build && electron-builder build --publish never",
    "package-all": "yarn build && electron-builder build -mwl",
    "package-ci": "yarn postinstall && yarn build && electron-builder",
    "package-debug": "cross-env DEBUG_PROD=true yarn build && electron-builder build",
    "package-linux": "yarn build && electron-builder build --linux",
    "package-mac": "yarn build && electron-builder build --mac",
    "package-win": "yarn build && electron-builder build --win --x64",
    "postinstall": "node -r @babel/register internals/scripts/CheckNativeDep.js && electron-builder install-app-deps && yarn build-dll",
    "postlint-fix": "prettier --ignore-path .eslintignore --single-quote --write '**/*.{js,jsx,json,html,css,less,scss,yml}'",
    "postlint-styles-fix": "prettier --ignore-path .eslintignore --single-quote --write '**/*.{css,scss}'",
    "preinstall": "node ./internals/scripts/CheckYarn.js",
    "prestart": "yarn build",
    "start": "cross-env NODE_ENV=production electron ./app/main.ts",
    "start-main-dev": "cross-env START_HOT=1 NODE_ENV=development electron -r ./internals/scripts/BabelRegister ./app/main.ts",
    "start-renderer-dev": "cross-env NODE_ENV=development webpack-dev-server --config config/webpack.config.renderer.dev.babel.js"
  },
  "dependencies": {
    "@fortawesome/fontawesome-svg-core": "^1.2.29",
    "@fortawesome/free-solid-svg-icons": "^5.13.1",
    "@fortawesome/react-fontawesome": "^0.1.11",
    "@hot-loader/react-dom": "^16.13.0",
    "core-js": "^3.6.5",
    "deepmerge": "^4.2.2",
    "devtron": "^1.4.0",
    "electron-context-menu": "^2.0.1",
    "electron-debug": "^3.1.0",
    "electron-log": "^4.2.2",
    "electron-updater": "^4.3.1",
    "jadnschema": "git+ssh://git@ccoe-gitlab.hii-tsd.com:screamingbunny/schema/jadn-node.git",
    "react": "^16.13.1",
    "react-dom": "^16.13.1",
    "react-drag-and-drop": "^3.0.0",
    "react-hot-loader": "^4.12.21",
    "react-json-editor-ajrm": "^2.5.9",
    "react-markdown": "^4.3.1",
    "react-redux": "^7.2.0",
    "react-sidebar": "^3.0.2",
    "reactstrap": "^8.5.0",
    "redux": "^4.0.5",
    "redux-api-middleware": "^3.2.1",
    "redux-persist": "^6.0.0",
    "redux-thunk": "^2.3.0",
    "source-map-support": "^0.5.19"
  },
  "devDependencies": {
    "@babel/core": "^7.10.3",
    "@babel/plugin-proposal-class-properties": "^7.10.1",
    "@babel/plugin-proposal-decorators": "^7.10.3",
    "@babel/plugin-proposal-do-expressions": "^7.10.1",
    "@babel/plugin-proposal-export-default-from": "^7.10.1",
    "@babel/plugin-proposal-export-namespace-from": "^7.10.1",
    "@babel/plugin-proposal-function-bind": "^7.10.1",
    "@babel/plugin-proposal-function-sent": "^7.10.1",
    "@babel/plugin-proposal-json-strings": "^7.10.1",
    "@babel/plugin-proposal-logical-assignment-operators": "^7.10.3",
    "@babel/plugin-proposal-nullish-coalescing-operator": "^7.10.1",
    "@babel/plugin-proposal-numeric-separator": "^7.10.1",
    "@babel/plugin-proposal-optional-chaining": "^7.10.3",
    "@babel/plugin-proposal-pipeline-operator": "^7.10.1",
    "@babel/plugin-proposal-throw-expressions": "^7.10.1",
    "@babel/plugin-syntax-dynamic-import": "^7.8.3",
    "@babel/plugin-syntax-import-meta": "^7.10.1",
    "@babel/plugin-transform-react-constant-elements": "^7.10.1",
    "@babel/plugin-transform-react-inline-elements": "^7.10.1",
    "@babel/preset-env": "^7.10.3",
    "@babel/preset-react": "^7.10.1",
    "@babel/preset-typescript": "^7.10.1",
    "@babel/register": "^7.10.3",
    "@types/deepmerge": "^2.2.0",
    "@types/enzyme": "^3.10.5",
    "@types/enzyme-adapter-react-16": "^1.0.6",
    "@types/history": "^4.7.6",
    "@types/jest": "^26.0.0",
    "@types/node": "^14.0.13",
    "@types/react": "^16.9.38",
    "@types/react-dom": "^16.9.8",
    "@types/react-redux": "^7.1.9",
    "@types/react-router": "^5.1.8",
    "@types/react-router-dom": "^5.1.5",
    "@types/react-test-renderer": "^16.9.2",
    "@types/redux-logger": "^3.0.8",
    "@types/webpack": "^4.41.17",
    "@types/webpack-env": "^1.15.2",
    "@typescript-eslint/eslint-plugin": "^3.4.0",
    "@typescript-eslint/parser": "^3.4.0",
    "babel-eslint": "^10.1.0",
    "babel-jest": "^26.1.0",
    "babel-loader": "^8.1.0",
    "babel-plugin-dev-expression": "^0.2.2",
    "babel-plugin-transform-react-remove-prop-types": "^0.4.24",
    "browserslist-config-erb": "^0.0.1",
    "chalk": "^4.1.0",
    "concurrently": "^5.2.0",
    "cross-env": "^7.0.2",
    "cross-spawn": "^7.0.3",
    "css-loader": "^3.6.0",
    "detect-port": "^1.3.0",
    "download-file": "^0.1.5",
    "electron": "9.0.5",
    "electron-builder": "^22.7.0",
    "electron-devtools-installer": "^3.0.0",
    "electron-rebuild": "^1.11.0",
    "enzyme": "^3.11.0",
    "enzyme-adapter-react-16": "^1.15.2",
    "enzyme-to-json": "^3.5.0",
    "eslint": "^7.3.1",
    "eslint-config-airbnb": "^18.2.0",
    "eslint-config-airbnb-typescript": "^8.0.2",
    "eslint-config-erb": "^1.0.0",
    "eslint-config-prettier": "^6.11.0",
    "eslint-import-resolver-webpack": "^0.12.2",
    "eslint-plugin-compat": "^3.7.0",
    "eslint-plugin-import": "^2.21.2",
    "eslint-plugin-jest": "^23.17.1",
    "eslint-plugin-jsx-a11y": "6.3.1",
    "eslint-plugin-prettier": "^3.1.4",
    "eslint-plugin-promise": "^4.2.1",
    "eslint-plugin-react": "^7.20.0",
    "eslint-plugin-react-hooks": "^4.0.4",
    "eslint-plugin-testcafe": "^0.2.1",
    "fbjs-scripts": "^1.2.0",
    "file-loader": "^6.0.0",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^26.1.0",
    "less": "^3.11.3",
    "less-loader": "^6.1.2",
    "lint-staged": "^10.2.11",
    "mini-css-extract-plugin": "^0.9.0",
    "named-regexp-groups": "^1.0.5",
    "node-sass": "^4.14.1",
    "optimize-css-assets-webpack-plugin": "^5.0.3",
    "prettier": "^2.0.5",
    "react-test-renderer": "^16.13.1",
    "redux-logger": "^3.0.6",
    "rimraf": "^3.0.2",
    "sass-loader": "^8.0.2",
    "style-loader": "^1.2.1",
    "stylelint": "^13.6.1",
    "stylelint-config-prettier": "^8.0.2",
    "stylelint-config-standard": "^20.0.0",
    "sync-request": "^6.1.0",
    "terser-webpack-plugin": "^3.0.6",
    "typescript": "^3.9.5",
    "typings-for-css-modules-loader": "^1.7.0",
    "url-loader": "^4.1.0",
    "webpack": "^4.43.0",
    "webpack-bundle-analyzer": "^3.8.0",
    "webpack-cli": "^3.3.12",
    "webpack-dev-server": "^3.11.0",
    "webpack-merge": "^4.2.2"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "cross-env NODE_ENV=development eslint --cache"
    ],
    "{*.json,.{babelrc,eslintrc,prettierrc,stylelintrc}}": [
      "prettier --ignore-path .eslintignore --parser json --write"
    ],
    "*.{css,scss}": [
      "stylelint --ignore-path .eslintignore --syntax scss --fix",
      "prettier --ignore-path .eslintignore --single-quote --write"
    ],
    "*.{html,md,yml}": [
      "prettier --ignore-path .eslintignore --single-quote --write"
    ]
  },
  "build": {
    "productName": "Schema Editor",
    "appId": "org.OpenC2.SchemaEditor",
    "files": [
      "node_modules/",
      "app.html",
      "package.json",
      {
        "from": "dist/",
        "to": "",
        "filter": [
          "**/*"
        ]
      }
    ],
    "dmg": {
      "contents": [
        {
          "x": 130,
          "y": 220
        },
        {
          "x": 410,
          "y": 220,
          "type": "link",
          "path": "/Applications"
        }
      ]
    },
    "win": {
      "target": [
        "nsis",
        "msi"
      ]
    },
    "linux": {
      "target": [
        "deb",
        "rpm",
        "AppImage"
      ],
      "category": "Development"
    },
    "directories": {
      "buildResources": "resources",
      "output": "release"
    },
    "fileAssociations": {
      "ext": "jadn",
      "name": "JADN Schema",
      "role": "Editor"
    }
  },
  "devEngines": {
    "node": ">=7.x",
    "npm": ">=4.x",
    "yarn": ">=0.21.3"
  },
  "browserslist": [
    "extends browserslist-config-erb"
  ],
  "keywords": [
    "electron",
    "react",
    "jadn",
    "schema"
  ],
  "prettier": {
    "overrides": [
      {
        "files": [
          ".prettierrc",
          ".babelrc",
          ".eslintrc",
          ".stylelintrc"
        ],
        "options": {
          "parser": "json"
        }
      }
    ],
    "singleQuote": true
  },
  "stylelint": {
    "extends": [
      "stylelint-config-standard",
      "stylelint-config-prettier"
    ]
  },
  "jest": {
    "testURL": "http://localhost/",
    "moduleNameMapper": {
      "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/internals/mocks/fileMock.js",
      "\\.(css|less|sass|scss)$": "identity-obj-proxy"
    },
    "moduleFileExtensions": [
      "js",
      "jsx",
      "ts",
      "tsx",
      "json"
    ],
    "moduleDirectories": [
      "node_modules",
      "app/node_modules"
    ],
    "setupFiles": [
      "./internals/scripts/CheckBuildsExist.js"
    ]
  }
}
